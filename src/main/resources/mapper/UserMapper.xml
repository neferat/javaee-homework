<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.spring.mapper.UserMapper">
    <resultMap type="boot.spring.po.User" id="UserResultMap">
        <id column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="avatar_url" property="avatarUrl"/>
        <result column="email" property="email"/>
        <result column="bio" property="bio"/>
        <result column="registration_date" property="registrationDate"/>
        <result column="password" property="password"/>
        <result column="phone_number" property="phoneNumber"/>
        <result column="points" property="points"/>
        <result column="user_level" property="userLevel"/>
        <result column="status" property="status"/>
        <result column="third_party_platform" property="thirdPartyPlatform"/>
        <result column="third_party_id" property="thirdPartyId"/>
    </resultMap>

    <select id="getAllUsers" resultMap="UserResultMap">
        SELECT * FROM users
    </select>

    <select id="getUserById" parameterType="java.lang.Long" resultMap="UserResultMap">
        SELECT * FROM users WHERE user_id = #{userId}
    </select>

    <update id="updateUser" parameterType="boot.spring.po.User">
        UPDATE users
        SET username = #{username},
            avatar_url = #{avatarUrl},
            email = #{email},
            bio = #{bio},
            password = #{password},
            phone_number = #{phoneNumber},
            points = #{points},
            user_level = #{userLevel},
            status = #{status},
            third_party_platform = #{thirdPartyPlatform},
            third_party_id = #{thirdPartyId}
        WHERE user_id = #{userId}
    </update>

    <insert id="insertUser" parameterType="boot.spring.po.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (
            username, avatar_url, email, bio, registration_date,
            password, phone_number, points, user_level, status,
            third_party_platform, third_party_id
        ) VALUES (
            #{username}, #{avatarUrl}, #{email}, #{bio}, #{registrationDate},
            #{password}, #{phoneNumber}, #{points}, #{userLevel}, #{status},
            #{thirdPartyPlatform}, #{thirdPartyId}
        )
    </insert>

    <delete id="deleteUser" parameterType="java.lang.Long">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

    <select id="getUserByUsername" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <select id="getUserByEmail" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>
</mapper>